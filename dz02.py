"""
Реализуйте рекурсивную функцию нарезания прямоугольника с заданными пользователем сторонами a и b
на квадраты с наибольшей возможной на каждом этапе стороной.
Выведите длины ребер получаемых квадратов и кол-во полученных квадратов.
"""


def sq_cutter(a, b, kolvokv):           
    kolvokv += 1

    if a < b:
        print(a, end=" ")
        b -= a
        if b > 0:
            sq_cutter(a, b, kolvokv)
            return kolvokv
    else:
        print(b, end=" ")
        a -= b
        if a > 0:
            sq_cutter(a, b, kolvokv)
            return kolvokv

    print("\nКоличество квадратов:", kolvokv)

a, b = int(input("Введите сторону а: ")), int(input("Введите сторону b: "))
print("Ребра квадратов:")

sq_cutter(a, b, 0)
"""
Хотелось бы реализовать функцию, чтобы передавать в нее только значения a и b и на выходе получать kolvokv, 
но провозился с видимостью переменной внутри и по-за функцией, видимо,не совсем шарю пока в глобальных/локальных 
переменных. Поэтому пришлось еще проталкивать дополнительный аргумент, который увеличивается на 1, каждый раз 
при вызове функции. А каждый вызов функции как бы отрезает квадрат с больше стороной. Ну и выбор целочисленного типа
обусловлен тем, что минимальный квадра у нас будет 1*1, если же впихнуть дробные числа, число квадратов будет стремиться
к бесконечности :)
"""
